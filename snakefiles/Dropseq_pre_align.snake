#Configfile
configfile:'config.json'

#Executables
TMPDIR = config['TMPDIR']
PICARD = config['PICARD']
DROPSEQ = config['DROPSEQ']

#Reference files
GENOMEREF = config['GENOMEREF']
REFFLAT = config['REFFLAT']
METAREF = config['METAREF']



rule all:
	input: expand('{sample}_tagged_unmapped.fastq', sample=config['Samples'])
	

rule fastq_to_sam:
	"""Create an empty bam file linking cell/UMI barcodes to reads"""
	input:
		r1='{sample}_R1.fastq.gz',
		r2='{sample}_R2.fastq.gz'
	output:
		temp('{sample}_unaligned.bam')
	threads: 1
	shell:
		"""java -Djava.io.tmpdir={TMPDIR} -jar {PICARD} FastqToSam\
		F1={input.r1}\
		F2={input.r2}\
		SM=DS O={output}"""

rule stage1:
	input: '{sample}_unaligned.bam'
	output: '{sample}_tagged_unmapped.bam'
	params: 'summary/{sample}_cell_tagging_summary.txt'
	threads: 4
	shell:
		"""{DROPSEQ}/TagBamWithReadSequenceExtended\
		SUMMARY={params}\
		BASE_RANGE=1-12\
		BASE_QUALITY=10\
		BARCODED_READ=1\
		DISCARD_READ=false\
		TAG_NAME=XC\
		NUM_BASES_BELOW_QUALITY=1\
		INPUT={input}\
		OUTPUT=/dev/stdout COMPRESSION_LEVEL=0 |\
		\
		{DROPSEQ}/TagBamWithReadSequenceExtended\
		SUMMARY={params}\
		BASE_RANGE=13-20\
		BASE_QUALITY=10\
		BARCODED_READ=1\
		DISCARD_READ=true\
		TAG_NAME=XM\
		NUM_BASES_BELOW_QUALITY=1\
		INPUT=/dev/stdin\
		OUTPUT=/dev/stdout COMPRESSION_LEVEL=0|\
		\
		{DROPSEQ}/FilterBAM TAG_REJECT=XQ\
		INPUT=/dev/stdin\
		OUTPUT=/dev/stdout COMPRESSION_LEVEL=0|\
		\
		{DROPSEQ}/TrimStartingSequence\
		OUTPUT_SUMMARY={params}\
		SEQUENCE=AAGCAGTGGTATCAACGCAGAGTGAATGGG\
		MISMATCHES=0\
		NUM_BASES=5\
		INPUT=/dev/stdin\
		OUTPUT=/dev/stdout COMPRESSION_LEVEL=0|\
		\
		{DROPSEQ}/PolyATrimmer\
    	OUTPUT_SUMMARY={params}\
    	MISMATCHES=0\
    	NUM_BASES=6\
    	OUTPUT={output}\
    	INPUT=/dev/stdin"""

rule sam_to_fastq:
	input: '{sample}_tagged_unmapped.bam'
	output: '{sample}_tagged_unmapped.fastq'
	shell:
		"""java -Xmx500m -jar -Djava.io.tmpdir={TMPDIR}	{PICARD} SamToFastq\
		INPUT={input}\
		FASTQ={output}"""

